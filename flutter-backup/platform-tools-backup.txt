═══════════════════════════════════════════════════════════════════════════════
PLATFORM TOOLS BACKUP - PharmApp Mobile Development Environment
═══════════════════════════════════════════════════════════════════════════════
Generated: 2025-10-20
Operating System: Windows 11 Professional 64-bit (Version 23H2, Build 2009)

═══════════════════════════════════════════════════════════════════════════════
ANDROID DEVELOPMENT TOOLS
═══════════════════════════════════════════════════════════════════════════════

Android SDK Configuration:
  Installation Path: C:\Users\user\AppData\Local\Android\Sdk
  Platform Version: android-36
  Build Tools Version: 36.0.0
  SDK Version: 36.0.0

Environment Variables:
  ANDROID_HOME = C:\Users\user\AppData\Local\Android\Sdk
  ANDROID_SDK_ROOT = C:\Users\user\AppData\Local\Android\Sdk (recommended alias)

Android SDK Components:
  ✓ Android Platform 36 (API Level 36)
  ✓ Android SDK Build-Tools 36.0.0
  ✓ Android SDK Platform-Tools (adb, fastboot)
  ✓ Android SDK Tools
  ✓ Android Emulator 35.3.11.0 (build_id 12836668)

Android SDK Manager Packages (Recommended):
  - platforms;android-36
  - build-tools;36.0.0
  - platform-tools
  - emulator
  - system-images;android-36;google_apis;x86_64 (for emulator)
  - cmdline-tools;latest

Android Emulator:
  Version: 35.3.11.0
  Build ID: 12836668
  Location: C:\Users\user\AppData\Local\Android\Sdk\emulator

Emulator AVD (Android Virtual Devices):
  - Check existing AVDs: emulator -list-avds
  - AVDs stored in: C:\Users\user\.android\avd

Android Debug Bridge (ADB):
  Location: C:\Users\user\AppData\Local\Android\Sdk\platform-tools\adb.exe
  Test Command: adb version
  Usage: Connect physical devices or emulators

Android Licenses:
  Status: ALL ACCEPTED
  Verify Command: flutter doctor --android-licenses
  Note: Must re-accept licenses on new machine

═══════════════════════════════════════════════════════════════════════════════
JAVA DEVELOPMENT KIT (JDK)
═══════════════════════════════════════════════════════════════════════════════

Java Version: OpenJDK Runtime Environment (build 21.0.4+-12508038-b607.1)
Java Binary: C:\Program Files\Android\Android Studio\jbr\bin\java
Source: Bundled with Android Studio installation

CRITICAL FOR ANDROID BUILDS:
  Java 21 (or compatible version) is REQUIRED for Android development
  This JDK is automatically used by Flutter for Android builds

Alternative JDK Configuration:
  If using a different JDK path, configure with:
  flutter config --jdk-dir="path/to/jdk"

Environment Variables (Optional):
  JAVA_HOME = C:\Program Files\Android\Android Studio\jbr
  Add to PATH: %JAVA_HOME%\bin

Test Java Installation:
  java -version
  javac -version

═══════════════════════════════════════════════════════════════════════════════
ANDROID STUDIO
═══════════════════════════════════════════════════════════════════════════════

Android Studio Version: 2024.2
Installation Path: C:\Program Files\Android\Android Studio
Java Version: OpenJDK Runtime Environment (build 21.0.4+-12508038-b607.1)

Environment Variable:
  android-studio-dir = C:\Program Files\Android\Android Studio

Required Plugins (Install in Android Studio):
  1. Flutter Plugin
     URL: https://plugins.jetbrains.com/plugin/9212-flutter

  2. Dart Plugin
     URL: https://plugins.jetbrains.com/plugin/6351-dart

Installation:
  - Android Studio > Settings > Plugins
  - Search for "Flutter" and "Dart"
  - Install both plugins
  - Restart Android Studio

Android Studio SDK Manager:
  - Access via: Tools > SDK Manager
  - Ensure Android 36 and build tools 36.0.0 are installed

Android Studio AVD Manager:
  - Access via: Tools > AVD Manager
  - Create virtual devices for testing
  - Recommended: Pixel 6 with API 36 (Google APIs)

═══════════════════════════════════════════════════════════════════════════════
GRADLE BUILD SYSTEM
═══════════════════════════════════════════════════════════════════════════════

Gradle Wrapper (Preferred Method):
  - Gradle version defined in project's android/gradle/wrapper/gradle-wrapper.properties
  - Each Flutter app has its own Gradle wrapper
  - No global Gradle installation required

Gradle Configuration Files (Per App):
  - android/build.gradle (project-level)
  - android/app/build.gradle (app-level)
  - android/gradle.properties (project properties)

Gradle Cache Location:
  Windows: C:\Users\user\.gradle
  Note: May consume significant disk space (safe to delete and rebuild)

Gradle Version Check (From project root):
  cd pharmacy_app/android
  gradlew --version

Common Gradle Commands:
  - ./gradlew clean (clean build artifacts)
  - ./gradlew build (build APK)
  - ./gradlew assembleRelease (build release APK)

═══════════════════════════════════════════════════════════════════════════════
WEB DEVELOPMENT TOOLS
═══════════════════════════════════════════════════════════════════════════════

Chrome Browser:
  Version: 141.0.7390.108
  Location: C:\Program Files\Google\Chrome\Application\chrome.exe
  Usage: Primary browser for Flutter web development

Chrome DevTools:
  - Built into Chrome browser
  - Access via F12 or right-click > Inspect
  - Essential for debugging Flutter web apps

Edge Browser (Alternative):
  Version: 142.0.3595.19
  Location: C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe
  Usage: Secondary browser for cross-browser testing

Web Development Ports (Default):
  - Pharmacy App: http://localhost:8084
  - Courier App: http://localhost:8085
  - Admin Panel: http://localhost:8086

CORS Configuration:
  - Required for Firebase Cloud Functions
  - Configured in backend functions code
  - Test with: curl -i -X OPTIONS [function-url] -H "Origin: http://localhost:8084"

═══════════════════════════════════════════════════════════════════════════════
WINDOWS DESKTOP DEVELOPMENT TOOLS
═══════════════════════════════════════════════════════════════════════════════

Visual Studio Build Tools:
  Version: Visual Studio Build Tools 2019 16.11.43
  Full Version: 16.11.35706.149
  Installation Path: C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools

Windows 10 SDK:
  Version: 10.0.19041.0
  Required for: Windows desktop application development

Visual Studio Components Required:
  - Desktop development with C++
  - Windows 10 SDK
  - MSVC v142 or later build tools

Test Windows Desktop Build:
  cd pharmacy_app
  flutter build windows

Windows Desktop Output:
  - Build artifacts: pharmacy_app/build/windows/x64/runner/Release/
  - Executable: pharmacy_app.exe

═══════════════════════════════════════════════════════════════════════════════
iOS DEVELOPMENT TOOLS (NOT AVAILABLE ON WINDOWS)
═══════════════════════════════════════════════════════════════════════════════

IMPORTANT: iOS development requires macOS with Xcode

If migrating to macOS, additional tools needed:
  - Xcode (latest stable version)
  - Xcode Command Line Tools
  - CocoaPods (pod install)
  - iOS Simulator (included with Xcode)

iOS Build Commands (macOS only):
  flutter build ios
  flutter build ipa

Flutter will automatically detect iOS toolchain on macOS.

═══════════════════════════════════════════════════════════════════════════════
COMMAND LINE TOOLS
═══════════════════════════════════════════════════════════════════════════════

Git:
  - Version control system (required)
  - Installation: https://git-scm.com/download/win
  - Test: git --version

Node.js & npm:
  - Required for Firebase CLI
  - Recommended: LTS version (v20+)
  - Installation: https://nodejs.org/
  - Test: node --version, npm --version

PowerShell:
  - Version: 5.1+ (Windows default) or PowerShell Core 7+
  - Used for: Backend testing scripts (D:\Projects\pharmapp\scripts\)
  - Test: $PSVersionTable.PSVersion

Windows Terminal (Recommended):
  - Modern terminal with multiple tabs
  - Installation: Microsoft Store
  - Supports PowerShell, Command Prompt, Git Bash

═══════════════════════════════════════════════════════════════════════════════
GOOGLE CLOUD SDK (Optional - For Advanced Firebase Usage)
═══════════════════════════════════════════════════════════════════════════════

Google Cloud SDK (gcloud CLI):
  - Not required for basic Flutter/Firebase development
  - Useful for advanced Firebase/GCP operations
  - Installation: https://cloud.google.com/sdk/docs/install

Usage:
  - Manage Firebase projects
  - Deploy to Google Cloud Run
  - Access Cloud Firestore from CLI
  - Manage IAM permissions

Installation Command:
  gcloud init
  gcloud auth login

═══════════════════════════════════════════════════════════════════════════════
RESTORATION INSTRUCTIONS - ANDROID TOOLS
═══════════════════════════════════════════════════════════════════════════════

Step 1: Install Android Studio
  1. Download Android Studio 2024.2 or latest from:
     https://developer.android.com/studio
  2. Run installer and follow setup wizard
  3. During setup, ensure these are checked:
     - Android SDK
     - Android SDK Platform
     - Android Virtual Device
  4. Install location: C:\Program Files\Android\Android Studio

Step 2: Install Android SDK Components
  1. Open Android Studio
  2. Navigate to: Settings > Appearance & Behavior > System Settings > Android SDK
  3. Install SDK Platform 36 (or latest stable)
  4. Install SDK Build-Tools 36.0.0 (or latest)
  5. Install Android Emulator
  6. Click "Apply" to download and install

Step 3: Set Environment Variables
  1. Open System Environment Variables:
     - Right-click This PC > Properties > Advanced system settings
     - Click "Environment Variables"
  2. Add User Variable:
     - Variable: ANDROID_HOME
     - Value: C:\Users\[YourUsername]\AppData\Local\Android\Sdk
  3. Add to PATH:
     - %ANDROID_HOME%\platform-tools
     - %ANDROID_HOME%\tools
     - %ANDROID_HOME%\tools\bin

Step 4: Accept Android Licenses
  flutter doctor --android-licenses
  (Press 'y' to accept all licenses)

Step 5: Verify Installation
  flutter doctor
  (Should show green checkmark for Android toolchain)

═══════════════════════════════════════════════════════════════════════════════
RESTORATION INSTRUCTIONS - JAVA JDK
═══════════════════════════════════════════════════════════════════════════════

Recommended: Use JDK bundled with Android Studio
  - Automatically configured by Android Studio
  - Located at: C:\Program Files\Android\Android Studio\jbr
  - Java 21 or compatible version

Flutter will automatically detect this JDK.

Alternative: Install separate JDK
  1. Download OpenJDK 21 from:
     https://adoptium.net/ (Temurin distribution)
  2. Install to: C:\Program Files\Java\jdk-21
  3. Set JAVA_HOME environment variable
  4. Add to PATH: %JAVA_HOME%\bin
  5. Configure Flutter: flutter config --jdk-dir="C:\Program Files\Java\jdk-21"

═══════════════════════════════════════════════════════════════════════════════
RESTORATION INSTRUCTIONS - VISUAL STUDIO BUILD TOOLS
═══════════════════════════════════════════════════════════════════════════════

For Windows Desktop Development:

Step 1: Download Visual Studio Build Tools
  https://visualstudio.microsoft.com/downloads/
  (Scroll to "Tools for Visual Studio" > "Build Tools for Visual Studio")

Step 2: Run Installer
  1. Select "Desktop development with C++"
  2. Ensure these individual components are checked:
     - MSVC v142 - VS 2019 C++ x64/x86 build tools (or latest)
     - Windows 10 SDK (10.0.19041.0 or latest)
     - C++ CMake tools for Windows
  3. Install

Step 3: Verify Installation
  flutter doctor
  (Should show green checkmark for Visual Studio)

Alternative: Install full Visual Studio 2019/2022 Community (includes Build Tools)

═══════════════════════════════════════════════════════════════════════════════
TESTING PLATFORM TOOLS INSTALLATION
═══════════════════════════════════════════════════════════════════════════════

After installation, verify all tools:

flutter doctor -v

Expected Output:
  [√] Flutter (Channel stable, 3.35.3)
  [√] Windows Version (11 or 10)
  [√] Android toolchain - develop for Android devices (Android SDK version 36.0.0)
  [√] Chrome - develop for the web
  [√] Visual Studio - develop Windows apps
  [√] Android Studio
  [√] VS Code
  [√] Connected device
  [√] Network resources

If any section shows [!] or [X], follow the suggested fixes.

Test Android Build:
  cd pharmacy_app
  flutter build apk

Test Web Build:
  cd admin_panel
  flutter build web

Test Windows Build:
  cd pharmacy_app
  flutter build windows

═══════════════════════════════════════════════════════════════════════════════
TROUBLESHOOTING COMMON PLATFORM ISSUES
═══════════════════════════════════════════════════════════════════════════════

Issue: "Android licenses not accepted"
Solution: Run 'flutter doctor --android-licenses' and accept all

Issue: "Unable to locate Android SDK"
Solution: Set ANDROID_HOME environment variable to SDK path

Issue: "Java not found"
Solution: Verify Java installation, set JAVA_HOME, configure with flutter config

Issue: "Gradle build failed"
Solution:
  - Clear Gradle cache: rm -rf ~/.gradle/caches
  - Update Gradle wrapper: cd android && ./gradlew wrapper --gradle-version 8.0

Issue: "Visual Studio not detected"
Solution: Install Visual Studio Build Tools with C++ desktop development

Issue: "Chrome not found"
Solution: Install Google Chrome or configure with: flutter config --chrome-dir="path"

Issue: "ADB not found"
Solution: Add Android SDK platform-tools to PATH

═══════════════════════════════════════════════════════════════════════════════
DISK SPACE CONSIDERATIONS
═══════════════════════════════════════════════════════════════════════════════

Approximate Disk Space Requirements:
  - Flutter SDK: ~2 GB
  - Android Studio: ~3 GB
  - Android SDK: ~10-20 GB (depending on installed components)
  - Visual Studio Build Tools: ~5-10 GB
  - Gradle cache: ~1-5 GB (grows over time)
  - Node.js & npm global packages: ~500 MB
  - VS Code + Extensions: ~500 MB

Total Recommended Free Space: 30-40 GB

Cache Locations (Can be cleaned if needed):
  - Gradle: C:\Users\user\.gradle
  - Pub (Dart packages): C:\Users\user\AppData\Local\Pub\Cache
  - Flutter build artifacts: Each app's build/ directory

═══════════════════════════════════════════════════════════════════════════════
PLATFORM-SPECIFIC NOTES FOR PHARMAPP MOBILE
═══════════════════════════════════════════════════════════════════════════════

Android Specifics:
  - All 5 apps can build Android APKs
  - Minimum SDK: API 21 (Android 5.0)
  - Target SDK: API 36 (latest)
  - Required permissions: Location, Camera (courier app), Internet

Web Specifics:
  - pharmacy_app, admin_panel, pharmapp_unified support web
  - courier_app has limited web support (camera/GPS may not work fully)
  - Test on Chrome for best compatibility

Windows Desktop:
  - All apps can theoretically build for Windows desktop
  - Primary testing done on Windows 11
  - Some mobile-specific features may not work (camera, GPS)

Key Platform Testing Strategy:
  1. Android: Primary target for pharmacy_app and courier_app
  2. Web: Primary target for admin_panel
  3. Windows Desktop: Optional deployment for admin_panel

═══════════════════════════════════════════════════════════════════════════════
END OF PLATFORM TOOLS BACKUP
═══════════════════════════════════════════════════════════════════════════════
